library(mice)
View(mice)
View(lm.fit)
1 + !1
!1 + 1
system.time(sqrt(5))
system.time({sqrt(5)})
system.time(sqrt(1612062))
system.time(sqrt(pi()**55))
system.time(sqrt(pi**55))
sqrt(pi**55)
pi**-1/2
system.time(pi**-1/2)
library(mice)
mice
View(mice)
?.norm.draw
X <- rbind(c(1, 2, 3), c(4, 5, 6), c(7, 8, 9))
X
X <- cbind(1, X)
X
test = [[1,2,3][4,5,6][7,8,9]]
test = [[1,2,3] [4,5,6] [7,8,9]]
test = [[1,2,3], [4,5,6], [7,8,9]]
test <- [[1, 2, 3] [4, 5, 6] [7, 8, 9]]
test <- matrix(1:9, 3, 3,)
test
diag(test)
diag(diag(test))
?sym
matrix(1:9, 3, 3)
M <- matrix(1:9, 3, 3)
sym(M)
?.norm.draw
install.packages("matlib")
?sym
??matlib::sym
sym
mice
library(mice)
sym
mice
sym
system.time(for(i in 1:100){sqrt(2)})
system.time(for(i in 1:1000000){sqrt(2)})
system.time(for(i in 1:1e20){sqrt(2)})
system.time(for(i in 1:1e15){sqrt(2)})
system.time(for(i in 1:1e10){sqrt(2)})
system.time(for(i in 1:1000000){sqrt(2)})
system.time(for(i in 1:10000000){sqrt(2)})
system.time(for(i in 1:1e7){sqrt(2)})
system.time(for(i in 1:10000){rnorm()^123})
system.time(for(i in 1:10000){rnorm(1)^123})
system.time(for(i in 1:1e9){rnorm(1)^123})
system.time(for(i in 1:1e7){rnorm(1)^123})
system.time(for(i in 1:1e7){rnorm(1)^123})
system.time(for(i in 1:1e7){rnorm(1)^123})
library(data.table)
df <- fread("ownCloud\\2023_unicef_covid\\raw_data\\DH_12Countries_110222.csv")
df <- fread("..\\ownCloud\\2023_unicef_covid\\raw_data\\DH_12Countries_110222.csv")
df <- fread("C:\\Users\\Tom Metherell\\ownCloud\\2023_unicef_covid\\raw_data\\DH_12Countries_110222.csv")
df <- fread(filepath = "C:\\Users\\Tom Metherell\\ownCloud\\2023_unicef_covid\\raw_data\\DH_12Countries_110222.csv")
?fread
df <- fread(file = "C:\\Users\\Tom Metherell\\ownCloud\\2023_unicef_covid\\raw_data\\DH_12Countries_110222.csv")
df <- read.csv(file = "C:\\Users\\Tom Metherell\\ownCloud\\2023_unicef_covid\\raw_data\\DH_12Countries_110222.csv")
df <- read.csv(file = "C:\\Users\\Tom Metherell\\OneDrive - University College London\\Rotations\\Rotation 1 (Population)\\Data\\Cleaned\\data_clean.csv")
df <- read.csv(file = "C:\\Users\\Tom Metherell\\OneDrive - University College London\\Rotations\\Rotation 1 (Population)\\Sleep project\\Data\\Cleaned\\data_clean.csv")
?seqlen
?seq_len
install.packages("languageserver")
test <- list(rep(df(var = c("test1", "test2", "test3"), missingness = rep(NA, 3))), 13)
test <- list(rep(data.frame(var = c("test1", "test2", "test3"), missingness = rep(NA, 3))), 13)
View(test)
test <- data.frame(var = c("test1", "test2", "test3"), missingness = rep(NA, 3))
test2 <- list(rep(test, 13))
View(test2)
test2 <- list(for(i in 1:13){test})
test2 <- []
test2 <- lapply(seq_len(13), function(x){data.frame(matrix(, 2, 3))}
)
seq_along(5)
seq_len(1)
seq_len(5)
names(test2) <- rep(4, 13)
X <- randn(3, 5)
library(stats)
X <- randn(3, 5)
??randn
X <- rnorm(3, 5)
X <- rep(rnorm(3, 5), 5)
X <- rnorm(5)
X <- matrix()
X <- matrix(3, 5)
X <- matrix(NA, 3, 5)
X <- matrix(NA, 5, 3)
for{i in 1:3}(X[, i] <- rnorm(5))
for{i in 1:3}(X[, i] <- rnorm(5))}
for(i in 1:3){X[, i] <- rnorm(5))}
for(i in 1:3){X[, i] <- rnorm(5))}
for(i in 1:3){X[, i] <- rnorm(5)}
y <- c(1, 2, 3, 4, 5)
library(stats)
lm.fit(X, y)
X[, 1] <- c(1, 2, 3)
X[, 1] <- c(1, 2, 3, 4, 5)
X[, 2] <- c(3, 2, 4, 1, 5)
X[, 3] <- c(3, 1, 2, 4, 5)
lm.fit(X, y)
qr.R(X)
qrX = qr(X)
qr.R(qrX)
R = qr.R(qrX)
R^2
t(R) * R
t(R) %*% R
test = X[1:3, 1:3]
X^2
test^2
t(test) * test
test
test^2
t(test) %*% test
t(test)  test
t(test) *# test
t(test) * test
test^2
test = [1, 2, 3, 4, 5]
test = c(1, 2, 3, 4, 5)
transpose(test) * test
t(test) * test
test^2
test = lm.fit(X, y)
test$residuals
r = t(test$residuals)
r
sum(r^2)
r^2
sum(r^2)
sum(r^2)
t(r) * R
t(r) * r
r^2
sum(r^2) / rchisq(1, 3)
cancor
View(cancor)
?apply
?eigen
?cor
?eigen
seq_len(3)
var(c("test", "test3", "test5#"))
?glm::model.matrix
install.packages("gml")
install.packages("glm")
?model.matrix
y <- rep(c("A", "B"), 100)
y <- rep(c("A", "B", "C"), 100)
model.matrix(~ 0 + y)
?cancor
matrix(c(1, 2, 3), c(4, 5, 6))
x = matrix(2, 5)
x = matrix(1:10, 2, 5)
x
x = matrix(1:10, 5, 2)
y = matrix(1:30, 5, 6)
cancor(x, y)
y
cancor(x, y, xcenter = FALSE, ycenter = FALSE)
y
x
0.4958005/-0.2097618
cancor(x, y, xcenter = FALSE, ycenter = FALSE)$xcoef[,2]
y %*% cancor(x, y, xcenter = FALSE, ycenter = FALSE)$xcoef[,2]
y
y[, 1] %*% cancor(x, y, xcenter = FALSE, ycenter = FALSE)$xcoef[,2]
cancor(y, x, xcenter = FALSE, ycenter = FALSE)
cancor(x, y, xcenter = FALSE, ycenter = FALSE)
cancor(y, x, xcenter = FALSE, ycenter = FALSE)
y %*% cancor(y, x, xcenter = FALSE, ycenter = FALSE)$xcoef[, 2]
y %*% cancor(y, x, xcenter = FALSE, ycenter = FALSE)$xcoef
y
x %*% cancor(y, x, xcenter = FALSE, ycenter = FALSE)$xcoef
y %*% cancor(y, x, xcenter = FALSE, ycenter = FALSE)$xcoef
x <- matrix(randn(), 3, 5)
x <- matrix(rnorm(), 3, 5)
x <- matrix(rnorm(15), 3, 5)
x
x <- matrix(rnorm(120), 20, 6)
y <- matrix(rnorm(300), 20, 15)
cca <- cancor(y, x, xcenter = FALSE, ycenter = FALSE)
y %*% cca$xcoef[, 2]
x <- matrix(1:120, 20, 6)
y <- matrix(1:300, 20, 15)
cca <- cancor(y, x, xcenter = FALSE, ycenter = FALSE)
y %*% cca$xcoef[, 2]
x <- matrix(rnorm(120), 20, 6)
y <- matrix(rnorm(300), 20, 15)
write.csv(x, "C:\\Users\\Tom Metherell\\Downloads\\x.csv")
write.csv(y, "C:\\Users\\Tom Metherell\\Downloads\\y.csv")
cca <- cancor(y, x, xcenter = FALSE, ycenter = FALSE)
y %*% cca$xcoef[, 2]
cca$xcoef
scale(cca$xcoef[2, ])
scale(cca$xcoef[, 2])
cca$xcoef
iris
X = matrix(iris[, 1:2])
Y = matrix(iris[, 3:4])
View(X)
X = iris[, 1:2]
X = matrix(X)
X = iris[, 1:2]
X = as.matrix(X)
Y = as.matrix(iris[, 3:4])
qx <- qr(X)
qy <- qr(Y)
dx <- qx$rank
dy <- qy$rank
z <- svd(qr.qty(qx, qr.qy(qy, diag(1, nr, dy)))[1L:dx,, drop = FALSE], dx, dy)
nr <- nrow(x)
nr <- nrow(X)
z <- svd(qr.qty(qx, qr.qy(qy, diag(1, nr, dy)))[1L:dx,, drop = FALSE], dx, dy)
View(z)
z$u
z$v
z$d
z <- svd(qr.qty(qy, qr.qx(qx, diag(1, nr, dy)))[1L:dx,, drop = FALSE], dx, dy)
z <- svd(qr.qty(qy, qr.qty(qx, diag(1, nr, dy)))[1L:dx,, drop = FALSE], dx, dy)
z$u
z$v
diag(1, 150, 2)
qx.Q
qx.q
qr.q(qx)
qx
qr.qy(dy, diag(1, nr, dy)))[1L:dx,, drop = FALSE], dx, dy)
zz
z
qr.qty(qx, qr.qy(qy, diag(1, nr, dy)))[1L:dx,, drop = FALSE]
A <- qr.qty(qx, qr.qy(qy, diag(1, nr, dy)))[1L:dx,, drop = FALSE]
svd(A, 2, 2)
X
qx$qr
xcoef <- backsolve((qx$qr)[1L:dx, 1L:dx, drop = FALSE], z$u)
View(xcoef)
qx$qr[1:2, 1:2, drop = FALSE]
z$u
A <- qr.qty(qx, qr.qy(qy, diag(1, nr, dy)))[1L:dx,, drop = FALSE]
z <- svd(A)
z$u
xcoef <- backsolve((qx$qr)[1L:dx, 1L:dx, drop = FALSE], z$u)
y <- model.matrix(iris[, 5])
iris[, 5]
y = model.matrix(~ 0 + iris[, 5])
y
cancor(x, y)
cancor(X, y)
cancor(X, y, xcenter = FALSE, ycenter = FALSE)
qy <- qr(y)
dx <- qx$rank
dy <- qy$rank
z <- svd(qr.qty(qx, qr.qy(qy, diag(1, nr, dy)))[1L:dx,, drop = FALSE],
dx, dy)
z
qr.qty(qx, qr.qy(qy, diag(1, nr, dy)))[1L:dx,, drop = FALSE]
y
y <- iris[, 5]
Y
yd <- model.matrix(~0 + y)
cancor(yd, X, FALSE, FALSE)
cca <- cancor(yd, X, FALSE, FALSE)
qx$qr
z$u
backsolve((qx$qr)[1:2, 1:2, drop = FALSE], z$u)
xcoef <- backsolve((qx$qr)[1:2, 1:2, drop = FALSE], z$u)
yd %*% xcoef[, 2]
yd
xcoef[, 2]
ry <- rep(TRUE, length(y))
x
X
quantify(y, ry, X)
library(mice)
install.packages("mice")
library(mice)
mice::quantify(y, ry, X)
quantify <- function(y, ry, x) {
# replaces (reduced set of) categories by optimal scaling
yf <- factor(y[ry], exclude = NULL)
yd <- model.matrix(~ 0 + yf)
xd <- x[ry, , drop = FALSE]
cca <- cancor(yd, xd, xcenter = FALSE, ycenter = FALSE)
ynum <- as.integer(y)
ynum[ry] <- scale(as.vector(yd %*% cca$xcoef[, 2L]))
# plot(y[ry], ynum[ry])
return(ynum)
}
quantify(y, ry, X)
yf <- factor(y[ry], exclude = NULL)
yf == y
yd <- model.matrix(~ 0 + yf)
xd <- x[ry, , drop = FALSE]
xd <- X[ry, , drop = FALSE]
xd == X
cca <- cancor(yd, xd, xcenter = FALSE, ycenter = FALSE)
cca$xcoef
qx <- qr(x)
qx <- qr(xd)
qy <- qr(yd)
dx <- qx$rank
dx
dy <- qy$rank
dy
z <- svd(qr.qty(qx, qr.qy(qy, diag(1, nr, dy)))[1L:dx,, drop = FALSE],
dx, dy)
z$u
xcoef <- backsolve((qx$qr)[1:dx, 1:dx, drop = FALSE], z$u)
cca$xcoef
cca$ycoef
test <- matrix(1:9, 3, 3)
eig <- eigen(test)
eig$values
seq_len(110)
eig$vectors
order(eig$vectors, decreasing = FALSE)
order(eig$vectors[, 3], decreasing = TRUE)
eig$values
eig.vectors
eig$vectors
test
A = matrix(c(1, 3, 2, 5, 6, 4, 9, 7, 8), 3, 3)
A
B = c(10, 14, 13)
lm.fit(A, B)
qr <- lm.fit(A, B)
qr.R(qr)
qr.R(qr$qr)
qr$coefficients
t(qr$coef)
qr$coef
solve(as.matrix(crossprod(qr.R(qr$qr))))
sigma.star <- sqrt(sum(B - A %*% qr$coef)^2) / rchisq(1, 1)
install.packages("brms")
install.packages(c("RStan", "StanHeaders"), type = "source")
install.packages("rstan", type = "source")
remove.packages("rstan")
remove.packages("StanHeaders")
install.packages("JuliaCall")
library(JuliaCall)
julia_console(
)
julia_setup()
library(purrr)
reduce(c("hi", "there", "how", "are", "you"), `+`)
reduce(c("hi", "there", "how", "are", "you"), "+")
paste(c("hi", "there", "how", "are", "you"), collapse = " + ")
remove.packages("brms")
install.packages("brms")
remove.packages("brms")
library(renv)
renv::purge("brms")
renv::purge("rstan")
setwd("C:\\Users\\Tom Metherell\\OneDrive - University College London\\UNICEF\\dh_covid")
library(targets)
connection_ls_model <- tar_read(connection_ls_model)
plot(connection_ls_model)
library(bayesplot)
plot(connection_ls_model)
library(brms)
install.packages("bayesplot")
install.packages("bayesplot")
install.packages("brms")
connection_ls_model <- tar_read(connection_ls_model)
library(targets)
connection_ls_model <- tar_read(connection_ls_model)
plot(connection_ls_model)
plot(connection_ls_model)
